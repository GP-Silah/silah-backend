---
name: Bug report
description: Report a bug you have encountered.
title: 'Bug: '
labels: [bug]

body:
    - type: markdown
      attributes:
          value: |
              Thanks for reporting a bug! Please fill out the details below.

    - type: input
      id: environment
      attributes:
          label: Environment
          description: OS, Browser, etc.
          placeholder: 'e.g. Windows 10, Chrome 91, v1.0.3'

    - type: textarea
      id: steps
      attributes:
          label: Steps to Reproduce
          description: How can we reproduce the problem?
          placeholder: "1. Go to '...'\n2. Click on '....'\n3. See error"

    - type: textarea
      id: expected
      attributes:
          label: Expected behavior
          placeholder: 'What should have happened instead?'

    - type: textarea
      id: screenshots
      attributes:
          label: Screenshots
          description: Paste screenshots if applicable.

    - type: checkboxes
      id: self_assign
      attributes:
          label: Self Assign
          options:
              - label: I want to work on this bug

    - type: markdown
      attributes:
          value: |
              ---
              ### For Assignees (Optional)
              If you're working on this bug, use the section below to plan and track your work.

    - type: textarea
      id: internal_notes
      attributes:
          label: Internal Notes (Subtasks, etc.)
          description: For your own planning, feel free to use Markdown.
          placeholder: |
              - [ ] Investigate root cause
              - [ ] Write failing test
              - [ ] Fix issue
              - [ ] Add test coverage
              - [ ] Confirm fix in dev

    - type: markdown
      attributes:
          value: |
              ---
              ## Definition of Done (DoD)

              **Note:** This DoD is meant as a helpful guide; not every item is required for every task or bug. Use what makes sense and skip what doesn't. You're doing great!

    - type: checkboxes
      id: dod_functionality_stability
      attributes:
          label: 'üì¶ Functionality & Stability'
          options:
              - label: All required endpoints and business logic are fully implemented
              - label: Testing/demo mode is implemented (if relevant) ‚Äî speeds up background jobs or long-running features for presentation purposes (e.g. faster cron job intervals)
              - label: No runtime errors or unhandled exceptions during execution
              - label: Application compiles cleanly with no TypeScript errors
              - label: Feature is deployed locally and ready to be consumed by the frontend

    - type: checkboxes
      id: dod_database_schema
      attributes:
          label: 'üóÉÔ∏è Database & Schema'
          options:
              - label: Prisma schema is updated to reflect any model changes
              - label: Migrations are generated, tested, and executed successfully

    - type: checkboxes
      id: dod_testing
      attributes:
          label: 'üîç Testing'
          options:
              - label: Unit tests written for controllers and services
              - label: E2E tests written
              - label: All tests pass reliably

    - type: checkboxes
      id: dod_documentation
      attributes:
          label: 'üìö Documentation'
          options:
              - label: Swagger docs are updated
              - label: Static Swagger UI files are pushed (to GitHub Pages)
              - label: JSDoc comments are added where relevant
              - label: README or related markdown documentation is updated (if needed)

    - type: checkboxes
      id: dod_code_quality
      attributes:
          label: 'üßπ Code Quality'
          options:
              - label: Linting passes with no major issues
              - label: No unused files, variables, or leftover debug code
              - label: Consistent and meaningful naming throughout
              - label: Proper folder and module structure is followed

    - type: checkboxes
      id: dod_security_best_practices
      attributes:
          label: 'üõ°Ô∏è Security & Best Practices'
          options:
              - label: No hard-coded secrets, API keys, or credentials
              - label: Sensitive data (e.g., passwords, tokens) is never exposed in logs or responses
              - label: JWT authentication, guards, and role checks are implemented (if needed)
              - label: Input validation is enforced via DTOs and class-validator or Pipes
              - label: Defensive programming practices are applied
              - label: Negative-case handling (edge cases, failures) is considered

    - type: checkboxes
      id: dod_communication
      attributes:
          label: 'üîÅ Communication'
          options:
              - label: Any breaking changes (e.g., API response formats, route changes) are clearly communicated to the team
